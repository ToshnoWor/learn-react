{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FromsControls.module.css","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","../node_modules/react-router/es/generatePath.js","../node_modules/react-router/es/Redirect.js","../node_modules/react-router-dom/es/Redirect.js","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","s","formControl","onMouseEnter","alert","Textarea","resProps","Object","E_Project_Diplom_learn_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_excluded","assign","Input","_excluded2","createField","placeholder","name","validators","component","arguments","length","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","module","exports","divSpanError","__webpack_require__","d","__webpack_exports__","requiredField","maxLength","value","concat","dialogs","dialogsItems","active","dialog","messages","newMessage","withAuthRedirect","Component","RedirectComponent","_React$Component","E_Project_Diplom_learn_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","_super","E_Project_Diplom_learn_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__","E_Project_Diplom_learn_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","apply","E_Project_Diplom_learn_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","isAuth","react__WEBPACK_IMPORTED_MODULE_4___default","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","to","React","connect","state","auth","patternCache","cacheCount","es_generatePath","pattern","params","cacheKey","cache","compiledGenerator","path_to_regexp_default","compile","generatePath_compileGenerator","generator","pretty","_extends","target","i","source","prototype","hasOwnProperty","call","Redirect_Redirect","Redirect","instance","Constructor","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","isStatic","context","router","staticContext","componentWillMount","browser_default","perform","componentDidMount","componentDidUpdate","prevProps","prevTo","esm_history","nextTo","warning_default","pathname","search","computeTo","computedMatch","history","push","replace","render","react_default","propTypes","prop_types_default","object","bool","from","string","oneOfType","isRequired","defaultProps","contextTypes","shape","func","es_Redirect","DialogItem","currentDialogs","id","onClick","selectCurrentDialog","Message","message","maxLength255","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","_this","messagesPage","createMessage","data","sendMessage","setMessage","prevState","snapshot","setState","objectSpread2","newMessageText","_this2","map","DialogsItem","messagesBox","m","Dialogs_Message_Message","recipient","compose","components_Dialogs_Dialogs"],"mappings":"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","file":"static/js/6.f547be1c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from './FromsControls.module.css';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n                {\r\n                    hasError && <span\r\n                        onMouseEnter={() => {\r\n                            alert(error)\r\n                        }}>!\r\n                    </span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...resProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...resProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...resProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...resProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField =\r\n    (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                validate={validators}\r\n                component={component}\r\n                {...props}\r\n            />{text}</div>)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FromsControls_formControl__3d2KV\",\"error\":\"FromsControls_error__Gm5kJ\",\"divSpanError\":\"FromsControls_divSpanError__1o8Ln\"};","export const requiredField = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2cUME\",\"dialogsItems\":\"Dialogs_dialogsItems__p4C5j\",\"active\":\"Dialogs_active__1mcWx\",\"dialog\":\"Dialogs_dialog__144Xw\",\"messages\":\"Dialogs_messages__1j3cL\",\"newMessage\":\"Dialogs_newMessage__79gso\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n}","import pathToRegexp from \"path-to-regexp\";\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compileGenerator = function compileGenerator(pattern) {\n  var cacheKey = pattern;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n  if (cache[pattern]) return cache[pattern];\n  var compiledGenerator = pathToRegexp.compile(pattern);\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledGenerator;\n    cacheCount++;\n  }\n\n  return compiledGenerator;\n};\n/**\n * Public API for generating a URL pathname from a pattern and parameters.\n */\n\n\nvar generatePath = function generatePath() {\n  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (pattern === \"/\") {\n    return pattern;\n  }\n\n  var generator = compileGenerator(pattern);\n  return generator(params, {\n    pretty: true\n  });\n};\n\nexport default generatePath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport generatePath from \"./generatePath\";\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\n\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, \"You should not use <Redirect> outside a <Router>\");\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = createLocation(prevProps.to);\n    var nextTo = createLocation(this.props.to);\n\n    if (locationsAreEqual(prevTo, nextTo)) {\n      warning(false, \"You tried to redirect to the same route you're currently on: \" + (\"\\\"\" + nextTo.pathname + nextTo.search + \"\\\"\"));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.computeTo = function computeTo(_ref) {\n    var computedMatch = _ref.computedMatch,\n        to = _ref.to;\n\n    if (computedMatch) {\n      if (typeof to === \"string\") {\n        return generatePath(to, computedMatch.params);\n      } else {\n        return _extends({}, to, {\n          pathname: generatePath(to.pathname, computedMatch.params)\n        });\n      }\n    }\n\n    return to;\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var push = this.props.push;\n    var to = this.computeTo(this.props);\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(React.Component);\n\nRedirect.propTypes = {\n  computedMatch: PropTypes.object,\n  // private, from <Switch>\n  push: PropTypes.bool,\n  from: PropTypes.string,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired\n    }).isRequired,\n    staticContext: PropTypes.object\n  }).isRequired\n};\nexport default Redirect;","// Written in this round about way for babel-transform-imports\nimport Redirect from \"react-router/es/Redirect\";\nexport default Redirect;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n//import {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    //let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div\r\n                className={props.currentDialogs === props.id ? s.active : ''}\r\n                onClick={() => {\r\n                    props.selectCurrentDialog(props.id)\r\n                }}>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={s.message}>{props.message}</div>\r\n\t)\r\n};\r\n\r\nexport default Message","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLength, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength255 = maxLength(255);\r\n\r\nconst MessageFrom = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field\r\n                component={Textarea}\r\n                name={'message'}\r\n                placeholder='Enter your message'\r\n                validate={[requiredField, maxLength255]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button>Enter</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: 'message'\r\n})(MessageFrom)\r\n\r\nclass Dialogs extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setMessage(this.props.auth);\r\n    }\r\n\r\n    state = {\r\n        ...this.props.messagesPage\r\n    }\r\n    createMessage = (data) => {\r\n        this.props.sendMessage(data.message);\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps !== this.props)\r\n            this.setState({\r\n                ...this.props.messagesPage,\r\n                newMessageText: ''\r\n            })\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state.messagesBox[this.state.currentDialogs]);\r\n        return (\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {this.state.dialogs.map(d =>\r\n                        <DialogItem name={d.name}\r\n                                    key={d.id}\r\n                                    id={d.id}\r\n                                    currentDialogs={this.state.currentDialogs}\r\n                                    selectCurrentDialog={this.props.selectCurrentDialog}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {\r\n                        this.state.messagesBox.length > 0\r\n                            ? this.state.messagesBox[this.state.currentDialogs].messages\r\n                                .map(m => <Message message={m.message} key={m.id} recipient={m.recipient}/>)\r\n                            : ''\r\n                    }\r\n                </div>\r\n                <div className={s.newMessage}>\r\n                    <MessageReduxForm onSubmit={this.createMessage}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dialogs","import {selectCurrentDialog, sendMessage, setMessage} from \"../../redux/message-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\n\r\nfunction DialogsContainer(props) {\r\n    return <Dialogs\r\n        messagesPage={props.messagesPage}\r\n        sendMessage={props.sendMessage}\r\n        setMessage={props.setMessage}\r\n        auth={props.auth}\r\n        selectCurrentDialog={props.selectCurrentDialog}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n        auth: state.auth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        sendMessage,\r\n        setMessage,\r\n        selectCurrentDialog\r\n    }),\r\n    withAuthRedirect\r\n)(DialogsContainer);"],"sourceRoot":""}